//    Copyright 2006-2010 Krisztian Magori, Mathieu Legros, Alun Lloyd, Fred Gould
//
//    This file is part of Skeeter Buster.
//
//    Skeeter Buster is free software: you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation, either version 3 of the License, or
//    (at your option) any later version.
//
//    Skeeter Buster is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License
//    along with Skeeter Buster.  If not, see <http://www.gnu.org/licenses/>.

#include "stdafx.h"  /* Note: #ifdef must come after this line for MS VISUAL 
		     ** This means that this file must be included even for
             ** g++  . BUT the standard file contains a file that
		     ** messes up g++, so you have to delete the line that
		     ** includes tchar.h
		     */
#ifdef _MSC_VER

#define ROUND_ System::Math::Round
#define _MAIN_ _tmain
#define FLOOR_	System::Math::Floor
#define GETCWD _getcwd
#include <direct.h>
//#using <mscorlib.dll>
//using namespace System;
#include <tchar.h>            // I had to remove this from stdafx.


 


#else

#define ROUND_ round
#define _MAIN_ main
#define FLOOR_ floor
#include <sys/unistd.h>
#include <sys/stat.h>
#define GETCWD getcwd




#endif

#include <time.h>
#include <stdio.h>
#include <math.h>
#include <iostream>
#include <cstring>

#include <list>
#include <vector>
#include <utility>
#include <cstdlib>

#include "ConfigFile.h"

using namespace std;


//  #using <mscorlib.dll>    //!!!!!!! G++ CHANGE!

//extern int rand();
//extern void srand();

//These are definitions for the random number generator that is used for stochastic 
//calculations.

/******* RANDOM NUMBER GENERATOR BY ZIFF **********/
#define A 471
#define B 1586
#define C 6988
#define D 9689
#define M 16383
#define RIMAX 2147483648.0        /* = 2^31 */
#define RANDOM_INTEGER (++nd, ra[nd & M] = ra[(nd-A) & M] ^ ra[(nd-B) & M] ^ ra[(nd-C) & M] ^ ra[(nd-D) & M])
void seed(long seed);
// static long ra[M+1], nd; // this is now elsewhere
/**************************************************/

//These are parameter names and default values for the model
//All their names should be self-explanatory

#define CheckProba(p) (!((p<0.)||(p>1.))) // check that a given value is acceptable as a probability

#define MALE true
#define FEMALE false

#define NULLIPAROUS true
#define PAROUS false

#define CIMSIM false
#define SKEETER_BUSTER true

#define DETERMINISTIC false
#define STOCHASTIC true

#define CALCULATION false
#define SAMPLING true

#define FOCKSDEVEL false
#define DEGREEDAYDEVEL true

#define CUSTOM_DESTINATION false
#define DEFAULT_DESTINATION true

#define NEUTRAL 0
#define ENGINEERED_UNDERDOMINANCE 1
#define WOLBACHIA 2
#define MEIOTIC_DRIVE 3
#define MEDEA 4
#define FEMALE_KILLING 5
#define FKR 6
#define SELECTION 7
#define ReduceReplace 8
#define Male_Killing 9

#define SOFT 0
#define HARD 1

#define LARVICIDE 1
#define ADULTICIDE 2

#define STICKY_BORDER 0
#define BOUNCE 1
#define TORE 2
#define RANDOM_EDGES 3


extern bool SIMULATION_MODE1;
extern bool SIMULATION_MODE2;
extern bool REPRODUCTION_MODE;
extern bool DEVELOPMENT_MODE;
extern int DISPERSAL_MODE;

extern int CONTAINER_MULTIPLIER_FACTOR;

extern int INCREASED_CONTAINER_VARIANCE;
extern int INCREASED_VARIANCE_EVERY_N_HOUSES;

extern int FITNESS_COST_STAGE;
extern int FITNESS_COST_STAGE_RR;
extern int TETRACYCLINE;
extern int FITNESS_COST_STAGE_SPECIFIC_AGE;
extern int EMBRYONIC_COST_SELECTION_TYPE;

extern double REDUCTION_IN_TRANSGENIC_MALES_MATING_COMPETITIVENESS;
extern double REDUCTION_IN_TRANSGENIC_MALES_MATING_COMPETITIVENESS_DOMINANCE;

extern bool NOPUPATION;
extern bool MARK_RELEASE_RECAPTURE;

extern bool DATED_OUTPUT;
extern bool LOG_PER_HOUSE;
extern bool OUTPUT_PER_CONTAINER_TYPE;
extern bool OUTPUT_PER_CONTAINER;
extern bool OUTPUT_WATER_LEVEL;
extern int OUTPUT_PER_CONTAINER_START_DATE;
extern bool DETAILED_LOG;
extern int DETAILED_LOG_START;
extern int DETAILED_LOG_END;
extern bool EPS_OUTPUT;
extern int EPS_OUTPUT_FREQ;
extern bool EPS_WOLBACHIA_OUTPUT;
extern int EPS_WOLBACHIA_OUTPUT_FREQ;
extern bool EPS_DENSITY_OUTPUT;
extern int EPS_DENSITY_OUTPUT_FREQ;
extern bool EPS_XT_OUTPUT;
extern bool EPS_YT_OUTPUT;
extern bool HTML_OUTPUT;
extern bool DONT_POPUP;
extern bool OUTPUT_FOR_SBEED;
extern bool SPATIAL_STATS;
extern bool FSTATS;
extern bool TEST_1;
extern bool TEST_2;
extern bool GENTIME;
extern bool LARVTIME;
extern bool SAVE_FINAL_STATE_AS_SETUP_FILE;
extern bool ZIPPED_OUTPUT;

extern bool DESTINATION;
extern string RESULTS_DIR;
extern string GNUPLOT_DIR;

extern int NUMBER_OF_DAYS;

extern int CHROM_NUMBER;

extern int GENETIC_CONTROL_METHOD;

extern int TRADITIONAL_CONTROL_METHOD;

extern int ADULTICIDE_BEGIN_DATE;
extern int ADULTICIDE_END_DATE;
extern int ADULTICIDE_FREQUENCY;
extern int ADULTICIDE_TYPE;
extern int ADULTICIDE_RESIDUAL_LENGTH;
extern int ADULTICIDE_REGION;
extern int ADULTICIDE_SIZE;
extern int ADULTICIDE_REGION_2_XMIN;
extern int ADULTICIDE_REGION_2_XMAX;
extern int ADULTICIDE_REGION_2_YMIN;
extern int ADULTICIDE_REGION_2_YMAX;
extern double ADULTICIDE_EFFICACY;
extern double ADULTICIDE_EFFICACY_DECREASE;
extern double ADULTICIDE_COMPLIANCE;

extern int LARVICIDE_BEGIN_DATE;
extern int LARVICIDE_END_DATE;
extern int LARVICIDE_FREQUENCY;
extern int LARVICIDE_TYPE;
extern int LARVICIDE_REGION;
extern int LARVICIDE_SIZE;
extern int LARVICIDE_REGION_2_XMIN;
extern int LARVICIDE_REGION_2_XMAX;
extern int LARVICIDE_REGION_2_YMIN;
extern int LARVICIDE_REGION_2_YMAX;
extern double LARVICIDE_CONTAINER_PROBABILITY;
extern double LARVICIDE_EFFICACY_ON_EGGS;
extern double LARVICIDE_EFFICACY_ON_LARVAE;
extern double LARVICIDE_EFFICACY_ON_PUPAE;
extern double LARVICIDE_COMPLIANCE;

extern int SOURCE_REMOVAL_BEGIN_DATE;
extern int SOURCE_REMOVAL_TYPE;
extern int SOURCE_REMOVAL_REGION;
extern int SOURCE_REMOVAL_SIZE;
extern int SOURCE_REMOVAL_REGION_2_XMIN;
extern int SOURCE_REMOVAL_REGION_2_XMAX;
extern int SOURCE_REMOVAL_REGION_2_YMIN;
extern int SOURCE_REMOVAL_REGION_2_YMAX;
extern double SOURCE_REMOVAL_PROPORTION;
extern double SOURCE_REMOVAL_COMPLIANCE;


extern int CONDUCT_DESTRUCTIVE_SAMPLING;
extern int NUMBER_OF_DAYS_SAMPLED;
extern int DESTRUCTIVE_LARVAE_SAMPLING;
extern int DESTRUCTIVE_ADULT_SAMPLING;
extern int DESTRUCTIVE_PUPAE_SAMPLING;

extern double SAMPLE_CONTAINER_PROBABILITY;
extern double PROPORTION_OF_EGGS_SAMPLED;
extern double PROPORTION_OF_LARVAE_SAMPLED;
extern double PROPORTION_OF_ADULT_FEMALES_SAMPLED;
extern double PROPORTION_OF_ADULT_MALES_SAMPLED;
extern double PROPORTION_OF_PUPAE_SAMPLED;

extern int FOOD_INPUT_METHOD;

extern int EU_TYPE; 
extern double FITNESS_COST_CONSTRUCT_ALPHA;
extern double FITNESS_COST_CONSTRUCT_BETA;
extern double FITNESS_COST_CONSTRUCT_GAMMA;
extern double FITNESS_COST_CONSTRUCT_DELTA;
extern double FITNESS_COST_DOMINANCE;

/*
#define HAS_TWO_COPIES_OF_CONSTRUCT_ALPHA_EU_TYPE_1(genotype) ((genotype&32)&&(genotype&16))
#define HAS_ONE_COPY_OF_CONSTRUCT_ALPHA_EU_TYPE_1(genotype) (((genotype&32)&&(!(genotype&16)))||((!(genotype&32))&&(genotype&16)))
#define HAS_TWO_COPIES_OF_CONSTRUCT_BETA_EU_TYPE_1(genotype) ((genotype&8)&&(genotype&4))
#define HAS_ONE_COPY_OF_CONSTRUCT_BETA_EU_TYPE_1(genotype) (((genotype&8)&&(!(genotype&4)))||((!(genotype&8))&&(genotype&4)))
#define IS_NOT_VIABLE_EU_TYPE_1(genotype) (((genotype&12)&&(!(genotype&48)))||((!(genotype&12))&&((genotype&48))))
*/

#define HAS_CONSTRUCT_ALPHA_EU_TYPE_1(genotype) (genotype&48)
#define HAS_TWO_COPIES_OF_CONSTRUCT_ALPHA_EU_TYPE_1(genotype) ((genotype&32)&&(genotype&16))
#define HAS_CONSTRUCT_BETA_EU_TYPE_1(genotype) (genotype&12)
#define HAS_TWO_COPIES_OF_CONSTRUCT_BETA_EU_TYPE_1(genotype) ((genotype&8)&&(genotype&4))
#define IS_NOT_VIABLE_EU_TYPE_1(genotype) (((genotype&12)&&(!(genotype&48)))||((!(genotype&12))&&((genotype&48))))

#define HAS_TWO_COPIES_OF_CONSTRUCT_ALPHA_EU_TYPE_2(genotype) ((genotype&128)&&(genotype&64))
#define HAS_ONE_COPY_OF_CONSTRUCT_ALPHA_EU_TYPE_2(genotype) (((genotype&128)&&(!(genotype&64)))||((!(genotype&128))&&(genotype&64)))
#define HAS_TWO_COPIES_OF_CONSTRUCT_BETA_EU_TYPE_2(genotype) ((genotype&32)&&(genotype&16))
#define HAS_ONE_COPY_OF_CONSTRUCT_BETA_EU_TYPE_2(genotype) (((genotype&32)&&(!(genotype&16)))||((!(genotype&32))&&(genotype&16)))
#define HAS_TWO_COPIES_OF_CONSTRUCT_GAMMA_EU_TYPE_2(genotype) ((genotype&8)&&(genotype&4))
#define HAS_ONE_COPY_OF_CONSTRUCT_GAMMA_EU_TYPE_2(genotype) (((genotype&8)&&(!(genotype&4)))||((!(genotype&8))&&(genotype&4)))
#define IS_NOT_VIABLE_EU_TYPE_2(genotype) ((((genotype&192)||(genotype&48))&&(!(genotype&12)))||((!((genotype&192)||(genotype&48)))&&(genotype&12)))

#define HAS_TWO_COPIES_OF_CONSTRUCT_ALPHA_EU_TYPE_3(genotype) ((genotype&512)&&(genotype&256))
#define HAS_ONE_COPY_OF_CONSTRUCT_ALPHA_EU_TYPE_3(genotype) (((genotype&512)&&(!(genotype&256)))||((!(genotype&512))&&(genotype&256)))
#define HAS_TWO_COPIES_OF_CONSTRUCT_BETA_EU_TYPE_3(genotype) ((genotype&128)&&(genotype&64))
#define HAS_ONE_COPY_OF_CONSTRUCT_BETA_EU_TYPE_3(genotype) (((genotype&128)&&(!(genotype&64)))||((!(genotype&128))&&(genotype&64)))
#define HAS_TWO_COPIES_OF_CONSTRUCT_GAMMA_EU_TYPE_3(genotype) ((genotype&32)&&(genotype&16))
#define HAS_ONE_COPY_OF_CONSTRUCT_GAMMA_EU_TYPE_3(genotype) (((genotype&32)&&(!(genotype&16)))||((!(genotype&32))&&(genotype&16)))
#define HAS_TWO_COPIES_OF_CONSTRUCT_DELTA_EU_TYPE_3(genotype) ((genotype&8)&&(genotype&4))
#define HAS_ONE_COPY_OF_CONSTRUCT_DELTA_EU_TYPE_3(genotype) (((genotype&8)&&(!(genotype&4)))||((!(genotype&8))&&(genotype&4)))
#define IS_NOT_VIABLE_EU_TYPE_3(genotype) ((((genotype&768)||(genotype&192)||(genotype&48))&&(!(genotype&12)))||((!((genotype&768)||(genotype&192)||(genotype&48)))&&(genotype&12)))

#define HAS_TWO_COPIES_OF_CONSTRUCT_ALPHA_EU_TYPE_4(genotype) ((genotype&512)&&(genotype&256))
#define HAS_ONE_COPY_OF_CONSTRUCT_ALPHA_EU_TYPE_4(genotype) (((genotype&512)&&(!(genotype&256)))||((!(genotype&512))&&(genotype&256)))
#define HAS_TWO_COPIES_OF_CONSTRUCT_BETA_EU_TYPE_4(genotype) ((genotype&128)&&(genotype&64))
#define HAS_ONE_COPY_OF_CONSTRUCT_BETA_EU_TYPE_4(genotype) (((genotype&128)&&(!(genotype&64)))||((!(genotype&128))&&(genotype&64)))
#define HAS_TWO_COPIES_OF_CONSTRUCT_GAMMA_EU_TYPE_4(genotype) ((genotype&32)&&(genotype&16))
#define HAS_ONE_COPY_OF_CONSTRUCT_GAMMA_EU_TYPE_4(genotype) (((genotype&32)&&(!(genotype&16)))||((!(genotype&32))&&(genotype&16)))
#define HAS_TWO_COPIES_OF_CONSTRUCT_DELTA_EU_TYPE_4(genotype) ((genotype&8)&&(genotype&4))
#define HAS_ONE_COPY_OF_CONSTRUCT_DELTA_EU_TYPE_4(genotype) (((genotype&8)&&(!(genotype&4)))||((!(genotype&8))&&(genotype&4)))
#define IS_NOT_VIABLE_EU_TYPE_4(genotype) ((((genotype&768)||(genotype&192))&&(!((genotype&48)||(genotype&12))))||((!((genotype&768)||(genotype&192)))&&((genotype&48)||(genotype&12))))


extern int MD_TYPE;
extern double FITNESS_COST_INSENSITIVE_TRANSGENE;
extern double FITNESS_COST_INSENSITIVE_NATURAL;
extern double FITNESS_COST_DRIVE_GENE;
extern double DRIVE_STRENGTH_SN;
extern double DRIVE_STRENGTH_IT;
extern double DRIVE_STRENGTH_IN;
extern double DRIVE_STRENGTH_MN;
extern double MD_FITNESS_COST_DOMINANCE;

extern int MEDEA_UNITS;
extern int MEDEA_CROSS_RESCUE;
extern double MEDEA_MATERNAL_LETHALITY;
extern double MEDEA_MATERNAL_FECUNDITY_LOSS;
extern double MEDEA_MATERNAL_FECUNDITY_LOSS_DOMINANCE;
extern double MEDEA_FITNESS_COST_PER_CONSTRUCT;
extern double MEDEA_FITNESS_COST_DOMINANCE;
extern int MEDEA_FEMALE_SPECIFIC_FITNESS_COST;

extern int NUMBER_OF_INCOMPATIBLE_WOLBACHIA ;
extern double WOLBACHIA_INFECTED_FEMALE_FECUNDITY_LOSS;
extern double WOLBACHIA_LEVEL_OF_INCOMPATIBILITY;
extern double WOLBACHIA_MATERNAL_TRANSMISSION;
extern double WOLBACHIA_SURVIVAL_REDUCTION_FEMALE_ONSET_AGE;
extern double WOLBACHIA_SURVIVAL_REDUCTION_FEMALE_FACTOR;
extern double WOLBACHIA_SURVIVAL_REDUCTION_MALE_ONSET_AGE;
extern double WOLBACHIA_SURVIVAL_REDUCTION_MALE_FACTOR;
extern int WOLBACHIA_EGG_SURVIVAL_REDUCTION_ONSET_AGE;
extern double WOLBACHIA_EGG_SURVIVAL_REDUCTION_FACTOR;


extern int IS_RESCUE;
extern int NUMBER_OF_ADDITIONAL_LOCI;
extern int NUMBER_OF_FEMALE_KILLING_LOCI;
extern double FEMALE_KILLING_EFFICIENCY;
extern int FKR_IS_EMBRYO_KILLING;
extern double KILLING_ALLELE_HOMOZYGOUS_FITNESS_COST;
extern double KILLING_ALLELE_FITNESS_COST_DOMINANCE;
extern double RESCUE_ALLELE_HOMOZYGOUS_FITNESS_COST;
extern double RESCUE_ALLELE_FITNESS_COST_DOMINANCE;
extern double TRANSGENE_ALLELE_HOMOZYGOUS_FITNESS_COST;
extern double TRANSGENE_ALLELE_FITNESS_COST_DOMINANCE;

extern double MALE_KILLING_EFFICIENCY;
extern int NUMBER_OF_MALE_KILLING_LOCI;

extern double SELECTIVE_FITNESS_COST_DOMINANCE;
extern double SELECTIVE_FITNESS_COST;

extern bool SAD_INTRODUCTION;
extern int SAD_INTRODUCTION_DATE;
extern int SAD_INTRODUCTION_REGION;
extern int SAD_INTRODUCTION_X_MIN;
extern int SAD_INTRODUCTION_X_MAX;
extern int SAD_INTRODUCTION_Y_MIN;
extern int SAD_INTRODUCTION_Y_MAX;
extern double SAD_INTRODUCTION_FREQUENCY;
extern int SAD_INTRODUCTION_FEMALE_GENOTYPE;

extern bool OVIPOSIT_EGGS_INDEPENDENTLY;
extern int MAXIMUM_NUMBER_OF_EGG_PARTITIONS;

extern double PROBABILITY_CLUTCH_PARTITIONED;
extern double PROPORTION_IN_PARTITION_0;
extern double PROPORTION_IN_PARTITION_1;
extern double PROPORTION_IN_PARTITION_2;
extern double PROPORTION_IN_PARTITION_3;
extern double PROPORTION_IN_PARTITION_4;
extern double PROPORTION_IN_PARTITION_5;
extern double PROPORTION_IN_PARTITION_6;
extern double PROPORTION_IN_PARTITION_7;
extern double PROPORTION_IN_PARTITION_8;
extern double PROPORTION_IN_PARTITION_9;

extern double LARVAL_EFFECT_ON_OVIPOSITION_PROBABILITY;

extern double OVITRAP_FEMALE_KILLING_EFFICIENCY;

extern double R;

extern double RO25_EMBRYONATION;
extern double DHA_EMBRYONATION;
extern double DHH_EMBRYONATION;
extern double THALF_EMBRYONATION;

extern double RO25_LARVAL_DEVELOPMENT;
extern double DHA_LARVAL_DEVELOPMENT;
extern double DHH_LARVAL_DEVELOPMENT;
extern double THALF_LARVAL_DEVELOPMENT;

extern double RO25_PUPAL_DEVELOPMENT;
extern double DHA_PUPAL_DEVELOPMENT;
extern double DHH_PUPAL_DEVELOPMENT;
extern double THALF_PUPAL_DEVELOPMENT;

extern double RO25_GONOTROPHIC_CYCLE;
extern double DHA_GONOTROPHIC_CYCLE;
extern double DHH_GONOTROPHIC_CYCLE;
extern double THALF_GONOTROPHIC_CYCLE;

extern double PHYSIOLOGICAL_DEVELOPMENT_THRESHOLD_EMBRYONATION;
extern double SKEETER_BUSTER_PHYSIOLOGICAL_DEVELOPMENT_THRESHOLD_PUPATION;
extern double CIMSIM_PHYSIOLOGICAL_DEVELOPMENT_THRESHOLD_PUPATION;
extern double PHYSIOLOGICAL_DEVELOPMENT_THRESHOLD_EMERGENCE;
extern double PHYSIOLOGICAL_DEVELOPMENT_THRESHOLD_FIRST_GONOTROPHIC_CYCLE;
extern double PHYSIOLOGICAL_DEVELOPMENT_THRESHOLD_LATER_GONOTROPHIC_CYCLES;

extern double SKEETER_BUSTER_PHYSIOLOGICAL_DEVELOPMENT_THRESHOLD_FIRST;
extern double SKEETER_BUSTER_PHYSIOLOGICAL_DEVELOPMENT_THRESHOLD_LAST;
extern double SKEETER_BUSTER_PHYSIOLOGICAL_DEVELOPMENT_THRESHOLD_SHAPE;

extern double NOMINAL_DAILY_SURVIVAL_EGGS;
extern double NOMINAL_DAILY_SURVIVAL_FEMALE_LARVAE;
extern double NOMINAL_DAILY_SURVIVAL_MALE_LARVAE;
extern double NOMINAL_DAILY_SURVIVAL_FEMALE_PUPAE;
extern double NOMINAL_DAILY_SURVIVAL_MALE_PUPAE;
extern double CIMSIM_NOMINAL_DAILY_SURVIVAL_FEMALE_ADULTS;
extern double CIMSIM_NOMINAL_DAILY_SURVIVAL_MALE_ADULTS;
extern double SKEETER_BUSTER_NOMINAL_DAILY_SURVIVAL_FEMALE_ADULTS;
extern double SKEETER_BUSTER_NOMINAL_DAILY_SURVIVAL_MALE_ADULTS;

extern int FEMALE_AGE_DEPENDENT_SURVIVAL ;
extern int FEMALE_MAXIMUM_AGE_1 ;
extern int FEMALE_START_SENESCENCE_2 ;
extern int FEMALE_MAXIMUM_AGE_2 ;

extern int MALE_AGE_DEPENDENT_SURVIVAL ;
extern int MALE_MAXIMUM_AGE_1 ;
extern int MALE_START_SENESCENCE_2 ;
extern int MALE_MAXIMUM_AGE_2 ;

extern double EGG_DAILY_SURVIVAL_LOW_TEMPERATURE;
extern double EGG_DAILY_SURVIVAL_LOW_TEMPERATURE_LIMIT;
extern double EGG_DAILY_SURVIVAL_NORMAL_TEMPERATURE_LOWER_LIMIT;
extern double EGG_DAILY_SURVIVAL_NORMAL_TEMPERATURE_UPPER_LIMIT;
extern double EGG_DAILY_SURVIVAL_HIGH_TEMPERATURE;
extern double EGG_DAILY_SURVIVAL_HIGH_TEMPERATURE_LIMIT;

extern double FEMALE_LARVAE_DAILY_SURVIVAL_LOW_TEMPERATURE;
extern double FEMALE_LARVAE_DAILY_SURVIVAL_LOW_TEMPERATURE_LIMIT;
extern double FEMALE_LARVAE_DAILY_SURVIVAL_NORMAL_TEMPERATURE_LOWER_LIMIT;
extern double FEMALE_LARVAE_DAILY_SURVIVAL_NORMAL_TEMPERATURE_UPPER_LIMIT;
extern double FEMALE_LARVAE_DAILY_SURVIVAL_HIGH_TEMPERATURE;
extern double FEMALE_LARVAE_DAILY_SURVIVAL_HIGH_TEMPERATURE_LIMIT;

extern double MALE_LARVAE_DAILY_SURVIVAL_LOW_TEMPERATURE;
extern double MALE_LARVAE_DAILY_SURVIVAL_LOW_TEMPERATURE_LIMIT;
extern double MALE_LARVAE_DAILY_SURVIVAL_NORMAL_TEMPERATURE_LOWER_LIMIT;
extern double MALE_LARVAE_DAILY_SURVIVAL_NORMAL_TEMPERATURE_UPPER_LIMIT;
extern double MALE_LARVAE_DAILY_SURVIVAL_HIGH_TEMPERATURE;
extern double MALE_LARVAE_DAILY_SURVIVAL_HIGH_TEMPERATURE_LIMIT;

extern double FEMALE_PUPAE_DAILY_SURVIVAL_LOW_TEMPERATURE;
extern double FEMALE_PUPAE_DAILY_SURVIVAL_LOW_TEMPERATURE_LIMIT;
extern double FEMALE_PUPAE_DAILY_SURVIVAL_NORMAL_TEMPERATURE_LOWER_LIMIT;
extern double FEMALE_PUPAE_DAILY_SURVIVAL_NORMAL_TEMPERATURE_UPPER_LIMIT;
extern double FEMALE_PUPAE_DAILY_SURVIVAL_HIGH_TEMPERATURE;
extern double FEMALE_PUPAE_DAILY_SURVIVAL_HIGH_TEMPERATURE_LIMIT;

extern double MALE_PUPAE_DAILY_SURVIVAL_LOW_TEMPERATURE;
extern double MALE_PUPAE_DAILY_SURVIVAL_LOW_TEMPERATURE_LIMIT;
extern double MALE_PUPAE_DAILY_SURVIVAL_NORMAL_TEMPERATURE_LOWER_LIMIT;
extern double MALE_PUPAE_DAILY_SURVIVAL_NORMAL_TEMPERATURE_UPPER_LIMIT;
extern double MALE_PUPAE_DAILY_SURVIVAL_HIGH_TEMPERATURE;
extern double MALE_PUPAE_DAILY_SURVIVAL_HIGH_TEMPERATURE_LIMIT;

extern double FEMALE_ADULT_DAILY_SURVIVAL_LOW_TEMPERATURE;
extern double FEMALE_ADULT_DAILY_SURVIVAL_LOW_TEMPERATURE_LIMIT;
extern double FEMALE_ADULT_DAILY_SURVIVAL_NORMAL_TEMPERATURE_LOWER_LIMIT;
extern double FEMALE_ADULT_DAILY_SURVIVAL_NORMAL_TEMPERATURE_UPPER_LIMIT;
extern double FEMALE_ADULT_DAILY_SURVIVAL_HIGH_TEMPERATURE;
extern double FEMALE_ADULT_DAILY_SURVIVAL_HIGH_TEMPERATURE_LIMIT;

extern double MALE_ADULT_DAILY_SURVIVAL_LOW_TEMPERATURE;
extern double MALE_ADULT_DAILY_SURVIVAL_LOW_TEMPERATURE_LIMIT;
extern double MALE_ADULT_DAILY_SURVIVAL_NORMAL_TEMPERATURE_LOWER_LIMIT;
extern double MALE_ADULT_DAILY_SURVIVAL_NORMAL_TEMPERATURE_UPPER_LIMIT;
extern double MALE_ADULT_DAILY_SURVIVAL_HIGH_TEMPERATURE;
extern double MALE_ADULT_DAILY_SURVIVAL_HIGH_TEMPERATURE_LIMIT;

extern double EGG_DAILY_SURVIVAL_WET_CONTAINER;
extern double EGG_DAILY_SURVIVAL_DRY_CONTAINER_SUNEXPOSURE_LIMIT;
extern double EGG_DAILY_SURVIVAL_DRY_CONTAINER_LOW_SUNEXPOSURE_LOW_SATURATIONDEFICIT_LIMIT;
extern double EGG_DAILY_SURVIVAL_DRY_CONTAINER_LOW_SUNEXPOSURE_HIGH_SATURATIONDEFICIT_LIMIT;
extern double EGG_DAILY_SURVIVAL_DRY_CONTAINER_LOW_SUNEXPOSURE_LOW_SATURATIONDEFICIT;
extern double EGG_DAILY_SURVIVAL_DRY_CONTAINER_LOW_SUNEXPOSURE_HIGH_SATURATIONDEFICIT;
extern double EGG_DAILY_SURVIVAL_DRY_CONTAINER_HIGH_SUNEXPOSURE;

extern double FEMALE_LARVAE_DAILY_SURVIVAL_DRY_CONTAINER;

extern double MALE_LARVAE_DAILY_SURVIVAL_DRY_CONTAINER;

extern double FEMALE_ADULT_DAILY_SURVIVAL_LOW_SATURATIONDEFICIT_LIMIT;
extern double FEMALE_ADULT_DAILY_SURVIVAL_HIGH_SATURATIONDEFICIT_LIMIT;
extern double FEMALE_ADULT_DAILY_SURVIVAL_LOW_SATURATIONDEFICIT;
extern double FEMALE_ADULT_DAILY_SURVIVAL_HIGH_SATURATIONDEFICIT;

extern double MALE_ADULT_DAILY_SURVIVAL_LOW_SATURATIONDEFICIT_LIMIT;
extern double MALE_ADULT_DAILY_SURVIVAL_HIGH_SATURATIONDEFICIT_LIMIT;
extern double MALE_ADULT_DAILY_SURVIVAL_LOW_SATURATIONDEFICIT;
extern double MALE_ADULT_DAILY_SURVIVAL_HIGH_SATURATIONDEFICIT;

extern double EGG_DAILY_SURVIVAL_TOPREDATION_LOW_TEMPERATURE_LIMIT;
extern double EGG_DAILY_SURVIVAL_TOPREDATION_HIGH_TEMPERATURE_LIMIT;
extern double EGG_DAILY_SURVIVAL_TOPREDATION_LOW_TEMPERATURE;
extern double EGG_DAILY_SURVIVAL_TOPREDATION_HIGH_TEMPERATURE;

extern double MINIMUM_TEMPERATURE_FOR_EGGHATCH;
extern double RATIO_OF_EGGS_HATCHING_WITHOUT_FLOODING;
extern double DAILY_RATIO_OF_EMBRYONATED_EGGS_THAT_HATCH_IF_SUBMERGED;
extern double EGGS_SEX_PERCENTAGE_FEMALE;

extern double SKEETER_BUSTER_FEMALE_LARVAE_WEIGHT_AT_HATCH;
extern double CIMSIM_FEMALE_LARVAE_WEIGHT_AT_HATCH;
extern double FEMALE_LARVAE_DAILY_SURVIVAL_FASTING_WITH_LIPID_RESERVE;
extern double FEMALE_LARVAE_DAILY_SURVIVAL_FASTING_WITHOUT_LIPID_RESERVE;
extern double FEMALE_LARVAE_SMALLEST_WEIGHT_FOR_SURVIVAL;
extern double SKEETER_BUSTER_FEMALE_LARVAE_MAXIMAL_PHYSIOLOGICAL_DEVELOPMENTAL_TIME_FOR_SURVIVAL;
extern double CIMSIM_FEMALE_LARVAE_MAXIMAL_PHYSIOLOGICAL_DEVELOPMENTAL_TIME_FOR_SURVIVAL;
extern double FEMALE_LARVAE_CONVERSION_RATE_OF_CONSUMED_FOOD_TO_BIOMASS;
extern double FEMALE_LARVAE_INCREMENT_OF_INCREASE_OF_RATE_OF_FOOD_EXPLOITATION;
extern double FEMALE_LARVAE_ASYMPTOTIC_RATE_OF_FOOD_EXPLOITATION_AT_HIGH_FOOD_DENSITIES;
extern double FEMALE_LARVAE_RATE_OF_METABOLIC_WEIGHT_LOSS_AS_A_FUNCTION_OF_DRY_WEIGHT_OF_LARVAE;
extern double FEMALE_LARVAE_EXPONENT_OF_METABOLIC_REQUIREMENTS_OF_LARVAE_AS_A_FUNCTION_OF_DRY_WEIGHT_OF_LARVAE;
extern double FEMALE_LARVAE_CHRONOLOGICAL_BASIS_AT_26C;
extern double FEMALE_LARVAE_MINIMUM_LIPID_RATIO_OF_LIVING_LARVAE;
extern double FEMALE_LARVAE_CONVERSION_OF_DRY_BODY_WEIGHT_TO_LIPID_RESERVE_PARAMETER_ONE;
extern double FEMALE_LARVAE_CONVERSION_OF_DRY_BODY_WEIGHT_TO_LIPID_RESERVE_PARAMETER_TWO;
extern double FEMALE_LARVAE_CONVERSION_RATE_OF_CADAVERS_TO_FOOD;
extern double FEMALE_LARVAE_SURVIVAL_AT_PUPATION_DUE_TO_BIRTH_DEFECTS;

extern int LARVAE_NUMBER_OF_EULER_STEPS;


//SKEETER BUSTER
extern double SKEETER_BUSTER_FEMALE_LARVAE_ABSOLUTE_MINIMUM_WEIGHT_FOR_PUPATION;
extern double SKEETER_BUSTER_FEMALE_LARVAE_SLOPE_OF_MINIMAL_LARVAL_WEIGHT_FOR_PUPATION_AS_FUNCTION_OF_T;
extern double SKEETER_BUSTER_FEMALE_LARVAE_INTERCEPT_OF_MINIMAL_LARVAL_WEIGHT_FOR_PUPATION_AS_FUNCTION_OF_T;
extern double SKEETER_BUSTER_FEMALE_LARVAE_INTERCEPT_OF_MINIMAL_LARVAL_WEIGHT_FOR_PUPATION_AS_FUNCTION_OF_T_25;
extern double SKEETER_BUSTER_FEMALE_LARVAE_INTERCEPT_OF_MINIMAL_LARVAL_WEIGHT_FOR_PUPATION_AS_FUNCTION_OF_T_50;
extern double SKEETER_BUSTER_FEMALE_LARVAE_INTERCEPT_OF_MINIMAL_LARVAL_WEIGHT_FOR_PUPATION_AS_FUNCTION_OF_T_75;
extern double SKEETER_BUSTER_FEMALE_LARVAE_INTERCEPT_OF_MINIMAL_LARVAL_WEIGHT_FOR_PUPATION_AS_FUNCTION_OF_T_100;
extern double SKEETER_BUSTER_FEMALE_LARVAE_PHYSIOLOGICAL_DEVELOPMENTAL_PERCENT_FOR_WMIN;



//CIMSIM
extern double CIMSIM_FEMALE_LARVAE_ABSOLUTE_MINIMUM_WEIGHT_FOR_PUPATION;
extern double CIMSIM_FEMALE_LARVAE_SLOPE_OF_MINIMAL_LARVAL_WEIGHT_FOR_PUPATION_AS_FUNCTION_OF_T;
extern double CIMSIM_FEMALE_LARVAE_INTERCEPT_OF_MINIMAL_LARVAL_WEIGHT_FOR_PUPATION_AS_FUNCTION_OF_T;
extern double CIMSIM_FEMALE_LARVAE_PHYSIOLOGICAL_DEVELOPMENTAL_PERCENT_FOR_WMIN;


extern double SKEETER_BUSTER_MALE_LARVAE_WEIGHT_AT_HATCH;
extern double CIMSIM_MALE_LARVAE_WEIGHT_AT_HATCH;
extern double MALE_LARVAE_DAILY_SURVIVAL_FASTING_WITH_LIPID_RESERVE;
extern double MALE_LARVAE_DAILY_SURVIVAL_FASTING_WITHOUT_LIPID_RESERVE;
extern double MALE_LARVAE_SMALLEST_WEIGHT_FOR_SURVIVAL;
extern double SKEETER_BUSTER_MALE_LARVAE_MAXIMAL_PHYSIOLOGICAL_DEVELOPMENTAL_TIME_FOR_SURVIVAL;
extern double CIMSIM_MALE_LARVAE_MAXIMAL_PHYSIOLOGICAL_DEVELOPMENTAL_TIME_FOR_SURVIVAL;
extern double MALE_LARVAE_CONVERSION_RATE_OF_CONSUMED_FOOD_TO_BIOMASS;
extern double MALE_LARVAE_INCREMENT_OF_INCREASE_OF_RATE_OF_FOOD_EXPLOITATION;
extern double MALE_LARVAE_ASYMPTOTIC_RATE_OF_FOOD_EXPLOITATION_AT_HIGH_FOOD_DENSITIES;
extern double MALE_LARVAE_RATE_OF_METABOLIC_WEIGHT_LOSS_AS_A_FUNCTION_OF_DRY_WEIGHT_OF_LARVAE;
extern double MALE_LARVAE_EXPONENT_OF_METABOLIC_REQUIREMENTS_OF_LARVAE_AS_A_FUNCTION_OF_DRY_WEIGHT_OF_LARVAE;
extern double MALE_LARVAE_CHRONOLOGICAL_BASIS_AT_26C;
extern double MALE_LARVAE_MINIMUM_LIPID_RATIO_OF_LIVING_LARVAE;
extern double MALE_LARVAE_CONVERSION_OF_DRY_BODY_WEIGHT_TO_LIPID_RESERVE_PARAMETER_ONE;
extern double MALE_LARVAE_CONVERSION_OF_DRY_BODY_WEIGHT_TO_LIPID_RESERVE_PARAMETER_TWO;
extern double MALE_LARVAE_SURVIVAL_AT_PUPATION_DUE_TO_BIRTH_DEFECTS;


//SKEETER BUSTER
extern double SKEETER_BUSTER_MALE_LARVAE_ABSOLUTE_MINIMUM_WEIGHT_FOR_PUPATION;
extern double SKEETER_BUSTER_MALE_LARVAE_SLOPE_OF_MINIMAL_LARVAL_WEIGHT_FOR_PUPATION_AS_FUNCTION_OF_T;
extern double SKEETER_BUSTER_MALE_LARVAE_INTERCEPT_OF_MINIMAL_LARVAL_WEIGHT_FOR_PUPATION_AS_FUNCTION_OF_T;
extern double SKEETER_BUSTER_MALE_LARVAE_INTERCEPT_OF_MINIMAL_LARVAL_WEIGHT_FOR_PUPATION_AS_FUNCTION_OF_T_25;
extern double SKEETER_BUSTER_MALE_LARVAE_INTERCEPT_OF_MINIMAL_LARVAL_WEIGHT_FOR_PUPATION_AS_FUNCTION_OF_T_50;
extern double SKEETER_BUSTER_MALE_LARVAE_INTERCEPT_OF_MINIMAL_LARVAL_WEIGHT_FOR_PUPATION_AS_FUNCTION_OF_T_75;
extern double SKEETER_BUSTER_MALE_LARVAE_INTERCEPT_OF_MINIMAL_LARVAL_WEIGHT_FOR_PUPATION_AS_FUNCTION_OF_T_100;
extern double SKEETER_BUSTER_MALE_LARVAE_PHYSIOLOGICAL_DEVELOPMENTAL_PERCENT_FOR_WMIN;

//CIMSIM
extern double CIMSIM_MALE_LARVAE_ABSOLUTE_MINIMUM_WEIGHT_FOR_PUPATION;
extern double CIMSIM_MALE_LARVAE_SLOPE_OF_MINIMAL_LARVAL_WEIGHT_FOR_PUPATION_AS_FUNCTION_OF_T;
extern double CIMSIM_MALE_LARVAE_INTERCEPT_OF_MINIMAL_LARVAL_WEIGHT_FOR_PUPATION_AS_FUNCTION_OF_T;
extern double CIMSIM_MALE_LARVAE_PHYSIOLOGICAL_DEVELOPMENTAL_PERCENT_FOR_WMIN;


extern double FEMALE_PUPAE_SURVIVAL_AT_EMERGENCE;
extern double FEMALE_ADULT_CONVERSION_FACTOR_OF_DRY_WEIGHT_OF_LARVAE_TO_WET_WEIGHT_OF_ADULT;
extern double FEMALE_ADULT_DAILY_FECUNDITY_FACTOR_FOR_WET_WEIGHT;
extern double SKEETER_BUSTER_FECUNDITY_DROP_BY_AGE;
extern double SKEETER_BUSTER_FECUNDITY_RATIO_STANDARD_DEVIATION_MEAN;
extern double FEMALE_ADULT_MINIMUM_TEMPERATURE_FOR_OVIPOSITION;


extern double MALE_PUPAE_SURVIVAL_AT_EMERGENCE;

extern double NULLIPAROUS_FEMALE_ADULT_DISPERSAL;
extern double PAROUS_FEMALE_ADULT_DISPERSAL;
extern double MALE_ADULT_DISPERSAL;
extern double NULLIPAROUS_FEMALE_ADULT_DISPERSAL_FROM_EMPTY_HOUSE;
extern double PAROUS_FEMALE_ADULT_DISPERSAL_FROM_EMPTY_HOUSE;
extern double MALE_ADULT_DISPERSAL_WHEN_NO_FEMALE;
extern int MAX_NUMBER_OF_DISPERSAL_STEPS;
extern int DISPERSAL_DIRECTION_BIAS;

extern double NULLIPAROUS_FEMALE_ADULT_LONG_RANGE_DISPERSAL;
extern double PAROUS_FEMALE_ADULT_LONG_RANGE_DISPERSAL;
extern double MALE_ADULT_LONG_RANGE_DISPERSAL;
extern int LR_DISPERSAL_MAX_DISTANCE;

extern double CONTAINER_MOVEMENT_PROBABILITY;
extern double PROBABILITY_OF_EMPTYING_MANUALLY_FILLED_CONTAINERS ;
extern double OVIPOSITION_REDUCTION_IN_COVERED_CONTAINERS ;
extern double FILLING_FREQUENCY_TYPE_3_CONTAINERS;

extern double FEMALE_DAILY_RECAPTURE_RATE;
extern double MALE_DAILY_RECAPTURE_RATE;

extern double DAILY_REMATING_PROBABILITY_PAROUS_FEMALES;

//degree-day parameters
extern double MINIMUM_DEVELOPMENTAL_TEMPERATURE;
extern double DEGREE_HOURS_TO_BE_REACHED;

// Track which parameter combination is being used
extern int SCENARIO;
//House setup parameters
extern int NUMBER_OF_COLUMNS;
extern int NUMBER_OF_ROWS;
extern int NUMBER_OF_HOUSES;


//Weather files
extern string WEATHER_YEAR_ONE;
extern string WEATHER_YEAR_TWO;
extern string WEATHER_YEAR_THREE;
extern string WEATHER_YEAR_FOUR;
extern string WEATHER_YEAR_FIVE;
extern string WEATHER_YEAR_SIX;
extern string WEATHER_YEAR_SEVEN;
extern string WEATHER_YEAR_EIGHT;

// Location-specific tweaks

extern bool GORDONVALE_REMOVE_173_195;
extern bool GORDONVALE_GOLF_COURSE;
extern bool IS_IQUITOS;
